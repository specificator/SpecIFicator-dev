name: EA-Plugin Integration Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-2019
    env:
      SOLUTION_NAME: MDD4All.SpecIF.Apps.EaPlugin

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Set version number from date using PS
      uses: Amadevus/pwsh-script@v2
      id: date-version
      with:
        script: |
            ([datetime]::now).tostring("yyyy.M.d")

    - name: Set version variable from date and build number
      env: 
        DATE_VERSION: ${{steps.date-version.outputs.result}}
      run: echo ("VERSION=" + $env:DATE_VERSION + "." + $env:GITHUB_RUN_NUMBER) >> $env:GITHUB_ENV

    - name: Echo version number
      run: echo $env:VERSION

    - name: Update Assembly info versions
      uses: Amadevus/pwsh-script@v2
      id: script
      with:
        script: |
            function Update-SourceVersion
            {
                Param ([string]$Version)
                $NewVersion = 'AssemblyVersion("' + $Version + '")';
                Write-output $NewVersion
                $NewFileVersion = 'AssemblyFileVersion("' + $Version + '")';
                foreach ($o in $input) 
                {
                    Write-output $o.FullName
                    $TmpFile = $o.FullName + ".tmp"
                    get-content $o.FullName | 
                    %{$_ -replace 'AssemblyVersion\("[0-9]+(\.([0-9]+|\*)){1,3}"\)', $NewVersion } |
                    %{$_ -replace 'AssemblyFileVersion\("[0-9]+(\.([0-9]+|\*)){1,3}"\)', $NewFileVersion }  > $TmpFile

                    move-item $TmpFile $o.FullName -force
                }
            }
            Write-output 'Modifiing AssemblyInfos.'
            foreach ($file in "AssemblyInfo.cs", "AssemblyInfo.vb" ) 
            {
                get-childitem -recurse |? {$_.Name -eq $file} | Update-SourceVersion $env:VERSION;
            }

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1

    - name: Restore dependencies
      run: nuget restore ./src/${{env.SOLUTION_NAME}}-dev.sln

    - name: Build entire solution
      run: msbuild /p:Configuration=Release /p:Version=${{env.VERSION}} ./src/${{env.SOLUTION_NAME}}-dev.sln

    - name: Copy results
      run: |
        xcopy ".\src\${{env.SOLUTION_NAME}}\src\${{env.SOLUTION_NAME}}-dev\bin\Release\*.dll" .\Output\${{env.SOLUTION_NAME}}_${{env.VERSION}}\
        xcopy ".\src\${{env.SOLUTION_NAME}}\src\${{env.SOLUTION_NAME}}-dev\bin\Release\*.config" .\Output\${{env.SOLUTION_NAME}}_${{env.VERSION}}\
        xcopy ".\src\${{env.SOLUTION_NAME}}\src\${{env.SOLUTION_NAME}}\_Registry\*.*" .\Output\${{env.SOLUTION_NAME}}_${{env.VERSION}}\

    - name: Upload artifact(s)
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.SOLUTION_NAME}}_${{env.VERSION}}
        path: ./Output/**/*.*
      
